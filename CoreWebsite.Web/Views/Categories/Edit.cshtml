@model CoreWebsite.Web.ViewModels.CategoryViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Category</h4>
<hr />
<form asp-action="Edit" enctype="multipart/form-data">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="row">
        <dl class="col-md-6">
            <dt>
                @Html.DisplayNameFor(model => model.CategoryId)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.CategoryId)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.CategoryName)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.CategoryName)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Description)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Description)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Picture)
            </dt>
        </dl>
        <div class="col-md-6">
            <img src="@Url.Action("GetPicture", "Categories", new { id = Model.CategoryId })" style="width:100%;" />
        </div>
    </div>
    <div class="form-group">
        <label asp-for="Picture" class="control-label"></label>
        <input asp-for="Picture" class="form-control" />
        <span asp-validation-for="Picture" class="text-danger"></span>
    </div>
    <div class="form-group">
        <input type="submit" value="Save" class="btn btn-primary" />
    </div>

</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
